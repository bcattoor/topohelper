using System;
using System.Reflection;
using System.Windows.Forms;

namespace TopoHelper
{
    internal static class MyApplication
    {
        // Implementation based on INFO here: https://edi.wang/post/2018/9/27/get-app-version-net-core

        // Which version should I use?
        /*  https://stackoverflow.com/questions/64602/what-are-differences-between-assemblyversion-assemblyfileversion-and-assemblyin

        AssemblyVersion
        ---------------
        Where other assemblies that reference your assembly will look. If this number changes, other assemblies have to update their references to your assembly.

        AssemblyFileVersion
        -------------------
        Used for deployment. You can increase this number for every deployment. It is used by setup programs. Use it to mark assemblies that have the same AssemblyVersion, but are generated from different builds.

        In Windows, it can be viewed in the file properties.

        If possible, let it be generated by MSBuild. The AssemblyFileVersion is optional. If not given, the AssemblyVersion is used.

        I use the format: major.minor.revision.build, where I use revision for development stage (Alpha, Beta, RC and RTM), service packs and hot fixes.

        AssemblyInformationalVersion
        ----------------------------
        The Product version of the assembly. This is the version you would use when talking to customers or for display on your website. This version can be a string, like '1.0 Release Candidate'.
        */

        #region Public Methods

        public static string GetAssemblyFileVersion()
        {
            return System.Reflection.Assembly.GetExecutingAssembly().GetCustomAttribute<AssemblyFileVersionAttribute>().Version;
        }

        public static Version GetAssemblyVersion()
        {
            return System.Reflection.Assembly.GetExecutingAssembly().GetName().Version;
        }

        public static string GetInformationalVersion()
        {
            return Application.ProductVersion;
        }

        #endregion
    }
}